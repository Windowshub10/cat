

# A function to generate odd sized magic squares
def generate_square(n):
    # initialize magic square
    mat = [[0] * n for _ in range(n)]

    # Initialize position for 1
    i = n // 2
    j = n - 1

    # One by one put all values in magic square
    for num in range(1, n * n + 1):
        # if row is -1 and column becomes n,
        # set row = 0, col = n -2
        if i == -1 and j == n:
            j = n - 2
            i = 0
        else:
            # If next number goes to out of
            # square's right side
            if j == n:
                j = 0

            # If next number goes to out of
            # square's upper side
            if i < 0:
                i = n - 1

        # If number is already present decrement
        # column by 2, and increment row by 1
        if mat[i][j]:
            j -= 2
            i += 1
            continue
        else:
            # set number
            mat[i][j] = num

        # increment and decrement
        # column and row by 1 respectively
        j += 1
        i -= 1

    return mat

n = 5
magic_square = generate_square(n)
for row in magic_square:
    print(" ".join(map(str, row)))
